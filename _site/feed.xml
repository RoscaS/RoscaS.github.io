<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>RoscaS</title>
    <description>Just some notes. # this means to ignore newlines until &quot;baseurl:&quot;
</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 15 Jun 2017 03:56:55 +0200</pubDate>
    <lastBuildDate>Thu, 15 Jun 2017 03:56:55 +0200</lastBuildDate>
    <generator>Jekyll v3.4.3</generator>
    
      <item>
        <title>Reseau: Programmation sockets (théorie)</title>
        <description>&lt;h1 id=&quot;programmation-socket-en-c-sous-linux&quot;&gt;Programmation socket en C sous Linux&lt;/h1&gt;

&lt;h2 id=&quot;1-quest-ce-quun-socket&quot;&gt;1. Qu’est-ce qu’un socket?&lt;/h2&gt;

&lt;p&gt;Un socket autorise la communication entre deux process différents.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Sur la même machine&lt;/li&gt;
  &lt;li&gt;Entre des machines distantes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sur Unix, toutes les actions I/O sont faites en écrivant ou en lisant un &lt;strong&gt;descripteur de fichier&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;L’entrée standard STDIN, la sortie standard STDOUT et l’erreur standard STDERR sont les trois descripteurs de fichier POSIX standard pour tout processus qui n’est pas un &lt;em&gt;daemon&lt;/em&gt;.&lt;br /&gt;
&lt;a href=&quot;https://fr.wikipedia.org/wiki/Descripteur_de_fichier&quot;&gt;wikipedia: descripteur de fichiers&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Un &lt;strong&gt;descripteur de fichier&lt;/strong&gt; est un entier &lt;code class=&quot;highlighter-rouge&quot;&gt;int&lt;/code&gt; associé avec un &lt;strong&gt;fichier ouvert&lt;/strong&gt;. Ce fichier peut être:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Une connexion réseau&lt;/li&gt;
  &lt;li&gt;Un fichier texte&lt;/li&gt;
  &lt;li&gt;Un terminal&lt;/li&gt;
  &lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;D’un point de vue programmatique, un socket ressemble et se comporte comme un descripteur de fichier. On utilise sur lui des fonctions comme &lt;code class=&quot;highlighter-rouge&quot;&gt;read()&lt;/code&gt; et &lt;code class=&quot;highlighter-rouge&quot;&gt;write()&lt;/code&gt; qui fonctionnent de la même façon avec un socket que sur des fichiers ou sur des pipes.&lt;/p&gt;

&lt;h2 id=&quot;2-contexte-dutilisation&quot;&gt;2. Contexte d’utilisation&lt;/h2&gt;

&lt;p&gt;Un socket Unix est utilisé dans un contexte &lt;strong&gt;client-serveur&lt;/strong&gt;.
Un &lt;strong&gt;Serveur&lt;/strong&gt; est un process qui effectue des actions (fonctions) à la demande d’un &lt;strong&gt;client&lt;/strong&gt;. La plupart des protocoles de la couche application (FTP, SMTP, POP3…) utilisent des sockets pour:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;établir une connexion entre client et serveur&lt;/li&gt;
  &lt;li&gt;échager des donnnées&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;3-types-de-sockets&quot;&gt;3. Types de sockets&lt;/h2&gt;

&lt;p&gt;types de sockets sont disponible pour les utilisateurs.&lt;/p&gt;

&lt;p&gt;Stream Sockets (&lt;strong&gt;TCP&lt;/strong&gt;)&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;fiables&lt;/li&gt;
  &lt;li&gt;orienté connexion&lt;/li&gt;
  &lt;li&gt;pas de limite de taille&lt;/li&gt;
  &lt;li&gt;message d’erreur en cas d’échec de l’envoi&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Datagram Sockets (&lt;strong&gt;UDP&lt;/strong&gt;)&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;non-fiable&lt;/li&gt;
  &lt;li&gt;non-orienté connexion (pas de phase connexion comme en TCP,  construction d’un paquet avec les coordonnées de la destination et puis envoi)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Raw Sockets&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;utilisés dans le developpement de protocoles de communication …&lt;/li&gt;
  &lt;li&gt;… et le &lt;a href=&quot;https://fr.wikipedia.org/wiki/Berkeley_sockets&quot;&gt;hacking&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Les process sont théoriquement censés communiquer uniquement entre sockets de même type mais il n’y a aucune restriction qui empêche la communication entre sockets de type différent.&lt;/p&gt;

&lt;h2 id=&quot;4-modèle-client-server&quot;&gt;4. Modèle “Client Server”&lt;/h2&gt;
&lt;p&gt;La majorité des applications d’Internet utilisent ce Modèle il se réfère à:
Deux process ou deux applications qui communiquent en échangeant des informations. L’un des deux process agit comme un client et l’autre comme un serveur.&lt;/p&gt;

&lt;h3 id=&quot;processus-client&quot;&gt;Processus Client&lt;/h3&gt;
&lt;p&gt;Typiquement celui qui fait  la requête d’informations. Après avoir reçu la résponse, ce process soit se termine soit continue à faire des traitements.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;exemple&lt;/strong&gt;: Un navigateur internet est une application &lt;strong&gt;client&lt;/strong&gt; qui envoie une requête à un serveur Web pour recevoir une page HTML.&lt;/p&gt;

&lt;h3 id=&quot;processus-serveur&quot;&gt;Processus Serveur&lt;/h3&gt;
&lt;p&gt;C’est le process qui reçoit les requêtes de la part des clients. Après avoir reçu une requête d’un client, ce process va effectuer le traitement demandé (rassembler des informations, et les renvoyer au client). Une fois ces taches éffectuées le process est disponible pour servir un autre client. &lt;strong&gt;Les process serveurs sont toujours prêts à servir les requêtes qui leurs parviennent&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;exemple&lt;/strong&gt;: Un serveur web est toujours entrain d’attendre des requêtes de navigateurs internet. Aussi tôt qu’un client (navigateur) lui fait parvenir une requête, il lui renvoie la page demandée.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Un client a besoin de connaitre l’adresse d’un serveur mais pas l’inverse.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;architectures-t2-et-t3&quot;&gt;Architectures T2 et T3&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;T2&lt;/strong&gt;: le client interagit directement avec le serveur. Ce type d’architecture peut avoir des problèmes de sécurité (gérés grâce au SSL: Secure Socket Layer) et des soucis de performance.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;T3&lt;/strong&gt;: Un logiciel appelé &lt;strong&gt;Middlewarese&lt;/strong&gt; placé entre client et serveur et est utilisé pour effectuer des tests de sécurité.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;types-de-serveurs&quot;&gt;Types de serveurs&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Serveurs &lt;strong&gt;itératifs&lt;/strong&gt;: forme la plus simple. Le serveur gère un client à la fois et les clients attendent pour s’y connecter.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Serveurs &lt;strong&gt;concurents (Concurrent(en))&lt;/strong&gt;: gènre plusieurs processus en parallèle et permet de servire plusieurs requêtes à la fois. La forme la plus simple pour implémenter un serveur concurent sous Unix est de &lt;strong&gt;FORKER&lt;/strong&gt; un processus enfant pour prendre en charge chaque client.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;interaction-entre-client-et-serveur&quot;&gt;Interaction entre client et serveur&lt;/h3&gt;
&lt;p&gt;Ce schéma décrit l’intéraction complète entre un client et un serveur.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/00illustrations/socket2/diag1.png&quot; height=&quot;auto&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;5-unix-socket---structures&quot;&gt;5. Unix Socket - Structures&lt;/h2&gt;

&lt;p&gt;Plusieurs structures sont utilisées pour la programmations socket sous Unix. Celles-ci contiennent des infomations concernant entre autre l’adresse et le port. La plupart des fonctions socket nécéssitent un pointeur sur l’adresse d’une structure comme argument.&lt;/p&gt;

&lt;h3 id=&quot;sockaddr&quot;&gt;sockaddr&lt;/h3&gt;
&lt;p&gt;Contient des informations sur le socket&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sockaddr&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;short&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;sa_family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;             &lt;span class=&quot;n&quot;&gt;sa_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Structure d’adresse générique qui sera passé dans la majorité des appels de fonction.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;description des membres:&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;attribut&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;valeur&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;sa_family&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;AF_INET&lt;br /&gt;AF_UNIX&lt;br /&gt;AF_NS&lt;br /&gt;AF_IMPLIK&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;représente une famille d’adresses (ipv4/6). On utilise généralement AF_INET (protocole IP)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;sa_data&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Protocol-specific Adress&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;les 14 bytes de ce champ sont interprété en fonction du type d’adresse.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;sockaddr_in&quot;&gt;sockaddr_in&lt;/h3&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sockaddr_in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;kt&quot;&gt;short&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;sin_family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;short&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;sin_port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in_addr&lt;/span&gt;       &lt;span class=&quot;n&quot;&gt;sin_addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;sin_zero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Permet de référencer (pointer) les divers éléments du socket&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;description des membres:&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;attribut&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;valeur&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;sa_family&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;AF_INET&lt;br /&gt;AF_UNIX&lt;br /&gt;AF_NS&lt;br /&gt;AF_IMPLIK&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;représente une famille d’adresses (ipv4/6). On utilise généralement AF_INET (protocole IP)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;sin_port&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Service Port&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;numéro de port sur 16 bits (Network Byte Order)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;sin_addr&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;IP Address&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;adresse IP sur 32 bits (Network Byte Order)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;sin_zero&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;ne s’utilise pas/plus&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;valeur à set sur NULL&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;in_addr&quot;&gt;in_addr&lt;/h3&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in_addr&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s_addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Cette structure est uniquement utilisée dans la structure précédente et contient le netid/hostid sur 32 bits&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;description des membres:&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;attribut&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;valeur&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;s_addr&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;service port&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;adresse IP sur 32 bits (Network Byte Order)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;hostent&quot;&gt;hostent&lt;/h3&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hostent&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
   &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h_aliases&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
   &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;h_addrtype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
   &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;h_length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;    
   &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h_addr_list&lt;/span&gt;
	
&lt;span class=&quot;c1&quot;&gt;// define h_addr  h_addr_list[0]
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Contient des informations sur l’hôte&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;description des membres:&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;attribut&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;valeur&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;h_name&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;url&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;nom de domaine de l’hôte&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;h_aliases&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;TI&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;liste d’alias de l’hôte&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;h_addrtype&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;AF_INET&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;représente une famille d’adresses (ipv4/6). On utilise généralement AF_INET (protocole IP)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;h_lenght&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;longeur de l’ip (byte). 4 pour IP&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;h_addr_list&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;in_addr&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;liste de pointeurs (pour le protocol IP)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;em&gt;note: h_addr est définis comme étant h_addr_list[0] pour assurer une retro compatibilité&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;servent&quot;&gt;servent&lt;/h3&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;servent&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
   &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s_aliases&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
   &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;s_port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
   &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s_proto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Contient des informations sur les service et les ports associés&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;description des membres:&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;attribut&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;valeur&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;s_name&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;http&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;nom officiel du serveur. (SMTP, FTP, POP3,…)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;s_aliases&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;ALIAS&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;liste d’alias du service. Le plus souvent sera set à NULL&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;s_port&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;80&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;numéro de port associé (ex. Si HTTP =&amp;gt; 80)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;s_proto&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;TCP&lt;br /&gt;UDP&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;protocole utilisé&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;conseils-dutilisation&quot;&gt;Conseils d’utilisation&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Ces structures sont au coeur de la programmation réseau. Nous les initialisons, remplissons et leurs passons des pointeurs qui pointent vers diverses fonctions de sockets. Parfois nous passons un pointeur à l’une de ces structure ce qui à pour effet de compléter les données de la structure.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Toujours passer ces structures par référence (pointeur) accompagné de la taill de cette dernière.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Quand une fonction socket remplit une de ces structures, nous passons également la longueure de la strucure par référence pour que sa valeur puisse être modifié par la fonction.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;6-ports-et-services-fonctions&quot;&gt;6. Ports et services (fonctions)&lt;/h2&gt;
&lt;p&gt;Unix nous fournit les fonctions suivantes pour fetch un nom de service du répertoire /etc/services&lt;/p&gt;
&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;servent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getservbyname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Cet appel prend le nom du service et le nom du protocole et retourne le &lt;strong&gt;numéro de port&lt;/strong&gt; correspondant au service.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;servent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getservbyport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Cet appel prend le port et le nom du protocole et retourne le &lt;strong&gt;nom&lt;/strong&gt; du service correspondant.&lt;/p&gt;

&lt;p&gt;La valeur de retour des deux fonctions est un ponteur sur la structure &lt;code class=&quot;highlighter-rouge&quot;&gt;servent&lt;/code&gt; vue un peu plus haut.&lt;/p&gt;

&lt;h2 id=&quot;7-ordre-des-bytes-représentation-des-bytes-en-mémoire&quot;&gt;7. Ordre des bytes (représentation des bytes en mémoire)&lt;/h2&gt;

&lt;h3 id=&quot;endiannes&quot;&gt;endiannes&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Ordre dans lequel les octets sont organisés dans une case mémoire &lt;strong&gt;ou dans une communication&lt;/strong&gt;. Big endian et Little endian sont deux architectures différentes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;big-endian&quot;&gt;Big endian&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;byte de poids fort&lt;/strong&gt; à gauche.&lt;br /&gt;
Rangement en mémoire de la valeur &lt;code class=&quot;highlighter-rouge&quot;&gt;0xA0B70708&lt;/code&gt; dans une structure mémoire de cases de 1 byte&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;adr:&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;0&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;1&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;2&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;3&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;val:&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;A0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;B7&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;07&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;08&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;…&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Rangement en mémoire de la valeur &lt;code class=&quot;highlighter-rouge&quot;&gt;0xA0B70708&lt;/code&gt; dans une structure mémoire de cases de 2 byte:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;0&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;1&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt; &lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;2&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;3&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;A0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;B7&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;07&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;08&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;…&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;span style=&quot;color:#F92672&quot;&gt;&lt;strong&gt;Tous les protocoles TCP/IP communiquent en big-endian&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h4 id=&quot;little-endian&quot;&gt;Little endian&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;byte de poid faible&lt;/strong&gt; à gauche. &lt;br /&gt;
Rangement en mémoire de la valeur &lt;code class=&quot;highlighter-rouge&quot;&gt;0xA0B70708&lt;/code&gt; dans une structure mémoire de cases de 1 byte&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;adr:&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;0&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;1&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;2&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;3&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;val:&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;08&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;07&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;B7&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;A0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;…&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Rangement en mémoire de la valeur &lt;code class=&quot;highlighter-rouge&quot;&gt;0xA0B70708&lt;/code&gt; dans une structure mémoire de cases de 2 byte:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;0&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;1&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt; &lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;2&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;3&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;07&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;08&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;A0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;B7&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;…&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;span style=&quot;color:#F92672&quot;&gt;&lt;strong&gt;X86 fonctionne en Little endian&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h3 id=&quot;fonctions-pour-changer-lordre-des-bytes&quot;&gt;Fonctions pour changer l’ordre des bytes&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;attribut&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;htons()&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;host to Network Short&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;htonl()&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;host to Network Long&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;ntohl()&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Network to Host Long&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;ntohs()&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Network to Host Short&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;short&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;htons&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;short&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hostshort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Cette fonction converti 16-bit (2-byte) de &lt;strong&gt;host byte order&lt;/strong&gt; vers network byte order.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;htonl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hostlong&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Cette fonction converti 32-bit (4-byte) de &lt;strong&gt;host byte order&lt;/strong&gt; vers network byte order.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;short&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ntohs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;short&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;netshort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Cette fonction converti 16-bit (2-byte) de network byte order vers &lt;strong&gt;host byte order&lt;/strong&gt;.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ntohl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;netlong&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Cette fonction converti 32-bit de network byte order vers &lt;strong&gt;host byte order&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;fonction-pour-déterminter-lendiannes-dune-machine&quot;&gt;Fonction pour déterminter l’endiannes d’une machine&lt;/h3&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

   &lt;span class=&quot;k&quot;&gt;union&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;short&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;short&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)];&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;un&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	
   &lt;span class=&quot;n&quot;&gt;un&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x0102&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   
   &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;short&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;un&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;un&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;big-endian&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      
      &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;un&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;un&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;little-endian&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      
      &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;unknown&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sizeof(short) = %d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;short&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	
   &lt;span class=&quot;n&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;output sur ma machine (core I7)&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&amp;gt; &lt;/span&gt;gcc byteorder.c
&lt;span class=&quot;gp&quot;&gt;$&amp;gt; &lt;/span&gt;./a.out
little-endian
&lt;span class=&quot;nv&quot;&gt;$&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;8-fonctions-pour-manipuler-les-adresses-ip&quot;&gt;8. Fonctions pour manipuler les adresses IP&lt;/h2&gt;

&lt;p&gt;Ces fonctions convertissent des IP entre le format ASCII string (lecture par un humain) et le format Network Byte Order (valeurs binaires contenues dans les structures vues plus haut).&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inet_aton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in_addr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;addrptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Converti la string spécifiée (au format &lt;em&gt;Internet standard dot notation&lt;/em&gt;) en format Network Adress&lt;/li&gt;
  &lt;li&gt;Range l’adresse dans la structure spécifiée.&lt;/li&gt;
  &lt;li&gt;Le format de l’adresse convertie est Network Bye Order (bytes de gauches à droite).&lt;/li&gt;
  &lt;li&gt;Retourne 1 si la string était valide et 0 si une erreur survient.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Exemple d’utilisation:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;arpa/inet.h&amp;gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(...)&lt;/span&gt;

   &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;retval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in_addr&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;addrptr&lt;/span&gt;
   
   &lt;span class=&quot;n&quot;&gt;memset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;addrptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;addrptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;retval&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inet_aton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;68.178.157.132&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;addrptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;(...)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;in_addr_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inet_addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;Converti la string spécifiée (au format &lt;em&gt;Internet standard dot notation&lt;/em&gt;) en format entier &lt;code class=&quot;highlighter-rouge&quot;&gt;int&lt;/code&gt; modifié&lt;/li&gt;
  &lt;li&gt;Le format de l’adresse convertie est Network Bye Order (bytes de gauches à droite).&lt;/li&gt;
  &lt;li&gt;Retourne une adresse IPv4 au format binaire sur 32 bits et une erreur de type INADDR_NONE&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Exemple d’utilisation:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;arpa/inet.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(...)&lt;/span&gt;

   &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sockaddr_in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

   &lt;span class=&quot;n&quot;&gt;memset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sin_addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s_addr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inet_addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;68.178.157.132&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
   
&lt;span class=&quot;p&quot;&gt;(...)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inet_ntoa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in_addr&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;Converti l’adresse de l’hôte spécifié en une string dans le format &lt;em&gt;Internet standard dot notation&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;fonctions-principales&quot;&gt;Fonctions principales&lt;/h2&gt;
</description>
        <pubDate>Wed, 14 Jun 2017 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/reseau/reseau-prog-sock-theorie.html</link>
        <guid isPermaLink="true">http://localhost:4000/reseau/reseau-prog-sock-theorie.html</guid>
        
        <category>reseau</category>
        
        <category>sockets</category>
        
        <category>smtp</category>
        
        <category>tcp</category>
        
        <category>udp</category>
        
        <category>c</category>
        
        <category>fr</category>
        
        
        <category>Reseau</category>
        
      </item>
    
      <item>
        <title>Reseau: Client SMTP</title>
        <description>
</description>
        <pubDate>Wed, 14 Jun 2017 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/reseau/reseau-client-SMTP.html</link>
        <guid isPermaLink="true">http://localhost:4000/reseau/reseau-client-SMTP.html</guid>
        
        <category>reseau</category>
        
        <category>sockets</category>
        
        <category>smtp</category>
        
        <category>tcp</category>
        
        <category>udp</category>
        
        <category>c</category>
        
        <category>fr</category>
        
        
        <category>Reseau</category>
        
      </item>
    
      <item>
        <title>Py: Regex</title>
        <description>&lt;h2 id=&quot;todo&quot;&gt;Todo&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Exemples en Python (Jupyter)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;liens&quot;&gt;Liens&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://regexone.com/&quot;&gt;tuto regex&lt;/a&gt;   &lt;br /&gt;
&lt;a href=&quot;http://regexr.com/&quot;&gt;analyse d’expressions (premier choix)&lt;/a&gt; &lt;br /&gt;
&lt;a href=&quot;https://regex101.com/tests&quot;&gt;analyse d’expressions 2&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;basic&quot;&gt;Basic&lt;/h2&gt;

&lt;h3 id=&quot;core&quot;&gt;Core&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;abc…&lt;/code&gt;          &lt;em&gt;Letters&lt;/em&gt;  &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;123…&lt;/code&gt;          &lt;em&gt;Digits&lt;/em&gt;  &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;\d&lt;/code&gt;            &lt;em&gt;Any Digit&lt;/em&gt;  &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;\D&lt;/code&gt;            &lt;em&gt;Any Non-digit char&lt;/em&gt;  &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;. &lt;/code&gt;            &lt;em&gt;Any char&lt;/em&gt;  &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;\.&lt;/code&gt;            &lt;em&gt;Period&lt;/em&gt;  &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;[abc]&lt;/code&gt;         &lt;em&gt;Only a, b, or c&lt;/em&gt;  &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;[^abc]&lt;/code&gt;        &lt;em&gt;Not a, b, nor c&lt;/em&gt;  &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;[a-z]&lt;/code&gt;         &lt;em&gt;Characters a to z&lt;/em&gt;  &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;[0-9]&lt;/code&gt;         &lt;em&gt;Numbers 0 to 9&lt;/em&gt;  &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;\w&lt;/code&gt;            &lt;em&gt;Any Alphanum char&lt;/em&gt;  &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;\W&lt;/code&gt;            &lt;em&gt;Any Non-alphanum char&lt;/em&gt;  &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;\n&lt;/code&gt;            &lt;em&gt;a newline&lt;/em&gt;  &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;\t&lt;/code&gt;            &lt;em&gt;a tab&lt;/em&gt;  &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;\r&lt;/code&gt;            &lt;em&gt;carriage return&lt;/em&gt;  &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;           &lt;em&gt;m Repetitions&lt;/em&gt;  &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;m,n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;         &lt;em&gt;m to n Repetitions&lt;/em&gt;  &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;             &lt;em&gt;0 or more repetitions&lt;/em&gt;  &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt;             &lt;em&gt;1 or more repetitions&lt;/em&gt;  &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;?&lt;/code&gt;             &lt;em&gt;Optional char&lt;/em&gt;  &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;\s&lt;/code&gt;            &lt;em&gt;Any Whitespace&lt;/em&gt;  &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;\S&lt;/code&gt;            &lt;em&gt;Any Non-whitespace char&lt;/em&gt;  &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;^…$&lt;/code&gt;           &lt;em&gt;Starts and ends&lt;/em&gt;  &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;(…)&lt;/code&gt;           &lt;em&gt;Capture Group&lt;/em&gt;  &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;(a(bc))&lt;/code&gt;       &lt;em&gt;Capture Sub-group&lt;/em&gt;  &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;(.*)&lt;/code&gt;          &lt;em&gt;Capture all&lt;/em&gt;  &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;(abcdef)&lt;/code&gt;     &lt;em&gt;Matches abc or def&lt;/em&gt;  &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;\b&lt;/code&gt;        &lt;em&gt;boundary word/non-word&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;in-python&quot;&gt;In python&lt;/h2&gt;

&lt;p&gt;Match aregex @ start of str:&lt;/p&gt;
&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;match only if pattern fit all str:&lt;/p&gt;
&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fullmatch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;match first pattern found:&lt;/p&gt;
&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Return the string obtained by replacing the leftmost non-overlapping occurrences of the pattern in string by the replacement:&lt;/p&gt;
&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;repl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flags&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Same as sub, + return the nb of sub made:&lt;/p&gt;
&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;repl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Split a string by the occurrences of a pattern:&lt;/p&gt;
&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxsplit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Find all occurrences of a pattern in a str:&lt;/p&gt;
&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Return an iterator yielding a match object:&lt;/p&gt;
&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;finditer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;or each match.
Compile a pattern into a RegexObject:&lt;/p&gt;
&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Clear the regular expression cache:&lt;/p&gt;
&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;purge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Backslash all non-alphanumerics in a string:&lt;/p&gt;
&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;escape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Wed, 14 Jun 2017 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/py/Py-Regex.html</link>
        <guid isPermaLink="true">http://localhost:4000/py/Py-Regex.html</guid>
        
        <category>Py</category>
        
        <category>regex</category>
        
        
        <category>Py</category>
        
      </item>
    
      <item>
        <title>Algo: Résumé CP2</title>
        <description>&lt;p&gt;&lt;span style=&quot;color:red&quot;&gt; test: mercredi 14 juin 2017 à 10h00 (320) &lt;/span&gt;&lt;/p&gt;

&lt;h2 id=&quot;liens&quot;&gt;Liens:&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Internes:&lt;br /&gt;
&lt;a href=&quot;/algo/Algo-tri.html&quot;&gt;algorithmes de tri simples&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;/algo/recursivite.html&quot;&gt;récursivité&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://github.com/RoscaS/algo_sort&quot;&gt;repo(privé)&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Externes:&lt;br /&gt;
&lt;a href=&quot;https://visualgo.net/en&quot;&gt;VisuAlgo&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1-tri&quot;&gt;1. Tri&lt;/h2&gt;

&lt;h3 id=&quot;tri-bulle&quot;&gt;Tri Bulle&lt;/h3&gt;
&lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt;O(n^2)&lt;/script&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;stable&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Sait détecter si un tableau est trié&lt;/strong&gt; (amélioration flag)&lt;/li&gt;
  &lt;li&gt;Fait remonter les petites valeurs en &lt;strong&gt;échangeant&lt;/strong&gt; 2 valeurs contigues.&lt;/li&gt;
  &lt;li&gt;À chaque parcours l’élément avec la clé la plus petite pas encore trié se retrouve en position définitive.&lt;/li&gt;
  &lt;li&gt;À chaque parcours les autres éléments se déplacent vers leurs position définitive d’une case.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;tri-extract&quot;&gt;Tri Extract&lt;/h3&gt;
&lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt;O(n^2)&lt;/script&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;span style=&quot;color:red&quot;&gt;&lt;strong&gt;pas stable&lt;/strong&gt;&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Innéfficace pour les tableau déjà trié&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Parcours le tableau et &lt;strong&gt;sélectionne&lt;/strong&gt; l’élément avec la clé la plus faible&lt;/li&gt;
  &lt;li&gt;Echange à la fin du parcours avec l’élément à l’indice “gauche”&lt;/li&gt;
  &lt;li&gt;Incrémentation de “gauche”&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;tri-insert&quot;&gt;Tri Insert&lt;/h3&gt;
&lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt;O(n^2)&lt;/script&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;stable&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Utile pour insérer une valeur dans un tableau déjà trié ou partiellement trié&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Pour une valeur à &lt;strong&gt;insérer&lt;/strong&gt; dans un tableau déjà trié:
    &lt;ul&gt;
      &lt;li&gt;on décale chaque élément du tableau vers la droite tant que les clés sont plus grandes que la valeur à insérer&lt;/li&gt;
      &lt;li&gt;on insère la valeur une fois que la clé de l’élément  à sa gauche est plus petit&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;tri-par-base&quot;&gt;Tri par Base&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;color:green&quot;&gt;&lt;script type=&quot;math/tex&quot;&gt;O(n)&lt;/script&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;stable&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Efficace en temps mais pas en mémoire&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Tri basé sur la &lt;strong&gt;distribution&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Le nombre de files nécéssaire dépend de la base. (10 en base 10, 26 pour des char, 16 en hexa,…)&lt;/li&gt;
  &lt;li&gt;Autant de distributions que de caractères qui composent l’élément avec la clé la plus &lt;strong&gt;longue&lt;/strong&gt; du tableau à trier.&lt;/li&gt;
  &lt;li&gt;Les distributions commencent par le caractère le plus à droite, du premier élément du tableau&lt;/li&gt;
  &lt;li&gt;Placement de cet élément dans la file correspondant à ce caractère et ainsi de suite pour tous les éléments&lt;/li&gt;
  &lt;li&gt;Selon le principe du &lt;strong&gt;FIFO&lt;/strong&gt; on sort les éléments des files dans l’&lt;strong&gt;ordre croissant&lt;/strong&gt; des files (pour un tri croissant) et on les replace dans le tableau initial.&lt;/li&gt;
  &lt;li&gt;On répète pour le caractère à l’indice -1,-2,…&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nbr: 2 5 3 4 8
idx: 0 1 2 3 4
mot: p o u l e

première passe : dernier caractère (8 et e)
ensuite, caractère à l'indice -1 (4 et l), ...
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;fonctions utiles:&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;fonction-nombredeparcours&quot;&gt;fonction nombreDeParcours&lt;/h4&gt;
&lt;p&gt;note: &lt;span style=&quot;color:red&quot;&gt; &lt;em&gt;refaire ces algo de façon générique&lt;/em&gt; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Nombre de distributions =  &lt;strong&gt;nombre de chiffres qui compose le plus grand nombre&lt;/strong&gt;.
l’entier renvoyé par &lt;script type=&quot;math/tex&quot;&gt;\large \log_{10} n&lt;/script&gt; d’un nombre (&lt;script type=&quot;math/tex&quot;&gt;\large n&lt;/script&gt;) sera égal au nombre de chiffre qui le composent &lt;script type=&quot;math/tex&quot;&gt;\large -1&lt;/script&gt; (d’où le &lt;script type=&quot;math/tex&quot;&gt;\large+1&lt;/script&gt;).&lt;/p&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;nbParcours&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;log10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maximum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Le cast est fait automatiquement par le type de la valeur de retour&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&quot;fonction-extraireunite&quot;&gt;fonction extraireUnite&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;retourner une unité spécifique d’un nombre&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;extraireUnite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;static_cast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;em&gt;cast nécessaire pour éviter une &lt;a href=&quot;/algo/Algo-tri.html&quot;&gt;erreur de compilation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;comparaison&quot;&gt;Comparaison&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Algorithme&lt;/th&gt;
      &lt;th&gt;Complexité au pire&lt;/th&gt;
      &lt;th&gt;Stabilité&lt;/th&gt;
      &lt;th&gt;Famille*&lt;/th&gt;
      &lt;th&gt;Remarques&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Bulles et améliorations&lt;/td&gt;
      &lt;td&gt;&lt;script type=&quot;math/tex&quot;&gt;O(n^2)&lt;/script&gt;&lt;/td&gt;
      &lt;td&gt;oui&lt;/td&gt;
      &lt;td&gt;Echange&lt;/td&gt;
      &lt;td&gt;Sait détecter un tableau trié&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Extraction&lt;/td&gt;
      &lt;td&gt;&lt;script type=&quot;math/tex&quot;&gt;O(n^2)&lt;/script&gt;&lt;/td&gt;
      &lt;td&gt;&lt;span style=&quot;color:red&quot;&gt;non&lt;/span&gt;&lt;/td&gt;
      &lt;td&gt;Sélection&lt;/td&gt;
      &lt;td&gt;Inefficace sur un tableau déja trié (le pire)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Insertion&lt;/td&gt;
      &lt;td&gt;&lt;script type=&quot;math/tex&quot;&gt;O(n^2)&lt;/script&gt;&lt;/td&gt;
      &lt;td&gt;oui&lt;/td&gt;
      &lt;td&gt;Insertion&lt;/td&gt;
      &lt;td&gt;Intéressant pour insérer des vlaeurs dans un tableau déjà trié*&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Base&lt;/td&gt;
      &lt;td&gt;&lt;span style=&quot;color:green&quot;&gt;&lt;script type=&quot;math/tex&quot;&gt;O(n)&lt;/script&gt;&lt;/span&gt;&lt;/td&gt;
      &lt;td&gt;oui&lt;/td&gt;
      &lt;td&gt;Distribution&lt;/td&gt;
      &lt;td&gt;Intéressant pour les petites valeurs (“petit” nombre de chiffres)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;On peut trier les valeurs au fur et à mesure. Pour les autres, il est nécéssaire de les avoir toutes avant de commencer. En  &lt;em&gt;O(n)&lt;/em&gt;  dans le meilleur cas.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;2-récursivité&quot;&gt;2. Récursivité&lt;/h2&gt;

&lt;p&gt;Un objet est dit récursif s’il apparait dans sa définition.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;structure de données récursives: &lt;em&gt;listes&lt;/em&gt;, &lt;em&gt;arbres&lt;/em&gt; et &lt;em&gt;graphes&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;algorithmes récursif: si une des opérations est un appel à l’algorithme en &lt;strong&gt;lui même&lt;/strong&gt; mais à un rang inférieur&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;la récursivité c’est quand le sous-problème est de la &lt;strong&gt;même nature&lt;/strong&gt; que le problème initial mais à un rang inférieur&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Chaque appel de la fonction récursive est une nouvelle &lt;strong&gt;instance de la fonction&lt;/strong&gt; (&lt;script type=&quot;math/tex&quot;&gt;\neq&lt;/script&gt; même fonction car les paramètres sont différents).&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;nouvelle instance à chaque appel&lt;/li&gt;
  &lt;li&gt;chaque appel est différent du précédent, il n’y a pas &lt;em&gt;duplication&lt;/em&gt; du contexte, c’est un &lt;strong&gt;contexte différent&lt;/strong&gt; à chaque appel.&lt;/li&gt;
  &lt;li&gt;paramètres différents &lt;script type=&quot;math/tex&quot;&gt;\Rightarrow&lt;/script&gt; fonction différente&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Dire  &lt;em&gt;“une fonction récursive est une fonction qui se rappelle elle-même”&lt;/em&gt; est donc &lt;span style=&quot;color:red&quot;&gt; &lt;strong&gt;FAUX&lt;/strong&gt;&lt;/span&gt; (à moitié faux mais faux quand même).&lt;/p&gt;

&lt;h3 id=&quot;phases-dun-algorithme-récursif&quot;&gt;Phases d’un algorithme récursif&lt;/h3&gt;

&lt;p&gt;L’éxécution proprement dite peut se décomposer en deux temp:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Phase de descente&lt;/strong&gt;: appels récursifs (et création d’un contexte pour chacun d’entre eux) jusqu’à la condition terminale&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Phase de remontée&lt;/strong&gt;: retour des résultats et libération des contextes devenus inutiles&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;terminal--non-terminal&quot;&gt;Terminal &amp;amp; non-terminal&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Terminal&lt;/strong&gt;: aucune opération ne suit l’appel récursif&lt;br /&gt;
&lt;script type=&quot;math/tex&quot;&gt;\quad \Rightarrow&lt;/script&gt; la phase de remontée est inutile, elle ne fait aucun traitement, hormis le réajustement de la pile.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Non-terminal&lt;/strong&gt;: des opérations suivent l’appel récursif. (On a besoin du résultat du rang inférieur avant de pouvoir traiter le problème dans l’instance courante et renvoyer le résultat).&lt;br /&gt;
&lt;script type=&quot;math/tex&quot;&gt;\quad \Rightarrow&lt;/script&gt; la phase de remontée fait une partie du traitement, elle contient des(/la majorité) des opérations.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;La question à se poser et qui ne nécéssite pas de comprendre l’algorithme c’est:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;span style=&quot;color:green&quot;&gt; &lt;strong&gt;Est-ce qu’un return précède un appel de la fonction-elle même ?&lt;/strong&gt; &lt;/span&gt;&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;oui &lt;script type=&quot;math/tex&quot;&gt;\Rightarrow&lt;/script&gt; récursivité ** non-terminale**&lt;/li&gt;
    &lt;li&gt;non &lt;script type=&quot;math/tex&quot;&gt;\Rightarrow&lt;/script&gt; récursivité ** terminale**&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;pour-la-programmation-récursive-il-faut&quot;&gt;Pour la programmation récursive il faut…&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;avoir une condition terminale&lt;/li&gt;
  &lt;li&gt;avoir un appel récursif dont un des paramètres converge vers la condition terminale&lt;/li&gt;
  &lt;li&gt;s’assurer que la condition est toujours atteinte après un nombre fini d’appels&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;eviter-la-récursivité-quand&quot;&gt;Eviter la récursivité quand…&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;la récurence est d’ordre plus grand que 1 (c’est à dire que la valeur au rang &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt; ne dépend pas seulement du rang &lt;script type=&quot;math/tex&quot;&gt;n-1&lt;/script&gt; mais aussi de &lt;script type=&quot;math/tex&quot;&gt;n-2&lt;/script&gt;, voir &lt;script type=&quot;math/tex&quot;&gt;n-3&lt;/script&gt;, …)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;récursivité-vs-itération&quot;&gt;Récursivité vs itération&lt;/h3&gt;

&lt;p&gt;La récursivité est toujours plus lente que l’itération sauf pour la récursivité terminale. Cependant, la majorité des compilateurs détectent et supprime la phase de remonté. Une fonction récursive terminale est donc aussi rapide qu’une fonction itérative.&lt;/p&gt;

&lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt;\Rightarrow&lt;/script&gt; De part sa lisibilité accrue, la &lt;strong&gt;récursivité terminale&lt;/strong&gt; est à privilégier sur l’itération.&lt;/p&gt;

&lt;h4 id=&quot;a-retenir&quot;&gt;A retenir&lt;/h4&gt;

&lt;p&gt;Qu’est-ce que la récursivité?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Une fonction qui appelle la même fonction avec des paramètres différents.   &lt;em&gt;La fonction appellée s’execute dans un contexte différent de la première fonction&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Dans quels cas l’utiliser?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;Pour des problèmes récurrents.  &lt;em&gt;Si le sous problème est de même nature que le problème initial mais de rang inférieur&lt;/em&gt;&lt;/li&gt;
    &lt;li&gt;Sur des structures de données récursives&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;Points primordiaux d’une fonction récursive?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;Condition terminale. &lt;em&gt;Atteinte après un nombre fini d’appels&lt;/em&gt;&lt;/li&gt;
    &lt;li&gt;Un appel récursif. &lt;em&gt;Dont les paramètres convergent vers la condition terminale.&lt;/em&gt;&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;Types de récursivité?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;Terminale: (aucune opération ne suit l’appel récursif) La phase de remontée est inutile, elle ne fait aucun traitement, hormis le réajustement de la pile.&lt;/li&gt;
    &lt;li&gt;Non-terminale: (des opérations suivent l’appel récursif) On a besoin du résultat du rang inférieur avant de pouvoir traiter le problème dans l’instance courante et renvoyer le résultat.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Tue, 13 Jun 2017 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/algo/Algo-resume-cp2.html</link>
        <guid isPermaLink="true">http://localhost:4000/algo/Algo-resume-cp2.html</guid>
        
        <category>algo</category>
        
        <category>tri</category>
        
        <category>recursivite</category>
        
        
        <category>Algo</category>
        
      </item>
    
      <item>
        <title>Présentation projet p1: avancement, juin 2017</title>
        <description>&lt;h1 id=&quot;projet-p1-présentation-état-de-lavancement-12062017&quot;&gt;Projet p1: Présentation état de l’avancement 12/06/2017&lt;/h1&gt;

&lt;h2 id=&quot;slides&quot;&gt;Slides&lt;/h2&gt;

&lt;iframe width=&quot;770&quot; height=&quot;515&quot; src=&quot;https://gitpitch.com/RoscaS/pro_P1_drawingRobot/master?grs=github&amp;amp;t=white&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;repo&quot;&gt;Repo&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/RoscaS/pro_P1_drawingRobot&quot;&gt;Repo&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 12 Jun 2017 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/presentations/presentation-projet-P1.html</link>
        <guid isPermaLink="true">http://localhost:4000/presentations/presentation-projet-P1.html</guid>
        
        
        <category>Presentations</category>
        
      </item>
    
      <item>
        <title>Py: NumPy</title>
        <description>&lt;h2 id=&quot;cheatsheet&quot;&gt;cheatSheet&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/RoscaS/ed44a51eb27f3172e419d69563fa2ade.js&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;résumé&quot;&gt;résumé&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/RoscaS/05a8c7cf0eeb1b2b4865e641721cdae4.js&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;exercices&quot;&gt;Exercices&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/RoscaS/affa5118cdbd00aa881f2a98fc46eacc.js&quot;&gt;&lt;/script&gt;

</description>
        <pubDate>Tue, 06 Jun 2017 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/py/Py-NumPy.html</link>
        <guid isPermaLink="true">http://localhost:4000/py/Py-NumPy.html</guid>
        
        <category>Py</category>
        
        <category>numpy</category>
        
        <category>matplotlib</category>
        
        
        <category>Py</category>
        
      </item>
    
      <item>
        <title>Py: MatPlotLib</title>
        <description>&lt;script src=&quot;https://gist.github.com/RoscaS/f11a70e996b92becf0cae9fb904ca8f0.js&quot;&gt;&lt;/script&gt;

</description>
        <pubDate>Tue, 06 Jun 2017 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/py/Py-MatPlotLib.html</link>
        <guid isPermaLink="true">http://localhost:4000/py/Py-MatPlotLib.html</guid>
        
        <category>Py</category>
        
        <category>matplotlib</category>
        
        
        <category>Py</category>
        
      </item>
    
      <item>
        <title>Cpp: Divers</title>
        <description>&lt;h2 id=&quot;what-is-the-difference-between-printf-and-cout&quot;&gt;What is the difference between &lt;code class=&quot;highlighter-rouge&quot;&gt;printf()&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;cout&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.quora.com/What-is-the-difference-between-printf-cout-in-C++&quot;&gt;Quora&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;printf&lt;/code&gt; is a function and &lt;code class=&quot;highlighter-rouge&quot;&gt;cout&lt;/code&gt; is a global (namespaced) variable.&lt;/p&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hello world&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In this example, You are actually making two function calls, both of them to overloads of &lt;code class=&quot;highlighter-rouge&quot;&gt;operator&amp;lt;&amp;lt;()&lt;/code&gt;. This function is a binary operator; the first parameter is of type &lt;code class=&quot;highlighter-rouge&quot;&gt;std::ostream&amp;amp;&lt;/code&gt; (an output stream) and the second parameter is of any type that can be output. It returns its first parameter, allowing this operator to be chained for outputting multiple values.&lt;/p&gt;

&lt;p&gt;Unlike &lt;code class=&quot;highlighter-rouge&quot;&gt;printf&lt;/code&gt;, cout (and other output streams) are type safe. When you do something like &lt;code class=&quot;highlighter-rouge&quot;&gt;printf(&quot;%d&quot;,x);&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;printf&lt;/code&gt; will treat &lt;code class=&quot;highlighter-rouge&quot;&gt;x&lt;/code&gt; as an integer, no matter what type it actually is. This can be disastrously unsafe if you make a mistake. With &lt;code class=&quot;highlighter-rouge&quot;&gt;cout&lt;/code&gt;, the types are all inferred at compile time, and there is no way to make this kind of mistake.&lt;/p&gt;

&lt;p&gt;On the other hand, complex formatting is much easier to do with &lt;code class=&quot;highlighter-rouge&quot;&gt;printf&lt;/code&gt;. You can format &lt;code class=&quot;highlighter-rouge&quot;&gt;cout&lt;/code&gt;, but it is much &lt;strong&gt;more verbose&lt;/strong&gt;, with lots of insertion of strange objects with names like &lt;strong&gt;precision&lt;/strong&gt; and &lt;strong&gt;hex&lt;/strong&gt;. Even then it doesn’t have quite as many options as &lt;code class=&quot;highlighter-rouge&quot;&gt;printf&lt;/code&gt;. Using &lt;code class=&quot;highlighter-rouge&quot;&gt;cout&lt;/code&gt; is usually more verbose in general, even without formatting. So even though &lt;code class=&quot;highlighter-rouge&quot;&gt;cout&lt;/code&gt; can do much of the formatting that &lt;code class=&quot;highlighter-rouge&quot;&gt;printf&lt;/code&gt; can do, &lt;code class=&quot;highlighter-rouge&quot;&gt;printf&lt;/code&gt; has hung onto the “best for easy formatting” niche, even in C++ code.&lt;/p&gt;

&lt;h3 id=&quot;complexity&quot;&gt;Complexity&lt;/h3&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;cstdio&amp;gt;
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;string %d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;printf()&lt;/code&gt; works faster than &lt;code class=&quot;highlighter-rouge&quot;&gt;cout&lt;/code&gt;,&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;printf()&lt;/code&gt; is given the  type of the veriables to print.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cout&lt;/code&gt; first have to find the type and then print&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Additionally &lt;code class=&quot;highlighter-rouge&quot;&gt;printf()&lt;/code&gt; statements are shorter to write.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Mon, 05 Jun 2017 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/cpp/Cpp-Divers.html</link>
        <guid isPermaLink="true">http://localhost:4000/cpp/Cpp-Divers.html</guid>
        
        <category>Cpp</category>
        
        
        <category>Cpp</category>
        
      </item>
    
      <item>
        <title>Divers: Randonnée dans les Dolomites </title>
        <description>&lt;h2 id=&quot;1-overall&quot;&gt;1. Overall&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Point de départ : San Candido, dans le Val Pusterìa (ou Refuge Tre Scarpèri)&lt;/li&gt;
  &lt;li&gt;Point d’arrivée : Pieve di Cadore&lt;/li&gt;
  &lt;li&gt;Longueur de l’itinéraire : environ 85 kilomètres&lt;/li&gt;
  &lt;li&gt;Durée de la traversée : 6 jours&lt;/li&gt;
  &lt;li&gt;Dénivelé total en montée : environ 4500 mètres&lt;/li&gt;
  &lt;li&gt;Dénivelé total en descente : environ 4800 mètres&lt;/li&gt;
  &lt;li&gt;Altitude maximale du sentier : 2624 mètres (Forcella della Neve)&lt;/li&gt;
  &lt;li&gt;Altitude minimale du sentier : 880 mètres (Pieve di Cadore)&lt;/li&gt;
  &lt;li&gt;Balisage : bon sur tout le circuit&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;2-kme&quot;&gt;2. KmE&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Le km/effort est une unité utilisée en raid montagne prenant en compte à la fois la distance parcourue et le dénivelé.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Les kilomètres effort sont une unité de mesure qui vous permet de déterminer &lt;strong&gt;comment une randonnée est vraiment fatigante.&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Cette mesure tient compte de la longueur du chemin mais aussi de la différence de hauteur du parcours effectué (en &lt;strong&gt;montée mais aussi en descente&lt;/strong&gt;)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Pour calculer les kilomètres effort il faut ajouter la longueur du parcours avec la différence de hauteur en montée multipliée par 10, plus la différence de hauteur en descente multipliée par 3.3. Toutes les mesures sont en kilomètres.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;KmE = Longueur(Km) + \Delta montee(km) \cdot 10 + \Delta Descente (km) \cdot 3,3&lt;/script&gt;

&lt;h4 id=&quot;données&quot;&gt;Données&lt;/h4&gt;

&lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt;Longueur = 85 Km&lt;/script&gt;&lt;br /&gt;
&lt;script type=&quot;math/tex&quot;&gt;\Delta montee = 4500m = 4.5Km&lt;/script&gt;&lt;br /&gt;
&lt;script type=&quot;math/tex&quot;&gt;\Delta descente = 4800m = 4.8Km&lt;/script&gt;&lt;/p&gt;

&lt;h3 id=&quot;kme-de-la-randonnée&quot;&gt;KmE de la randonnée&lt;/h3&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;KmE = 85 + 4.5 \cdot 10 + 4.8 \cdot 3,3 =  \bbox[5px,border:2px solid red] { 145.84 Km}&lt;/script&gt;

&lt;h2 id=&quot;3-moyenne-kmejour&quot;&gt;3. moyenne KmE/jour&lt;/h2&gt;

&lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt;KmE_{tot} = 145.84 Km&lt;/script&gt;&lt;br /&gt;
&lt;script type=&quot;math/tex&quot;&gt;\Delta temps = 6 j&lt;/script&gt;&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\frac{145.84}{6} = 24.306&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\bbox[5px,border:2px solid red] {24.306 Km/jour}&lt;/script&gt;

&lt;p&gt;&lt;img src=&quot;/00illustrations/rando/radius.png&quot; float=&quot;right&quot; class=&quot;image&quot; style=&quot;width: 75%&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;4-vitesse-moyenne&quot;&gt;4. Vitesse moyenne&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Estimation de la vitesse moyenne de marche:&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Niveau du randonneur&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Vitesse de marche sur le plat&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;débutant peu entraîné&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1,5 à 2,5 km/h&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;intermédiaire condition physique moyenne&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;2,5 à 4,0 km/h&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;expérimenté bonne condition physique&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&amp;gt; 4,0 km/h&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;En me &lt;strong&gt;surestimant&lt;/strong&gt; disons que je suis en condition physique moyenne et débutant. Disons donc &lt;script type=&quot;math/tex&quot;&gt;3km/h&lt;/script&gt;  &lt;br /&gt;
&lt;script type=&quot;math/tex&quot;&gt;24.306/3 = \bbox[5px,border:2px solid red] {8.10 h/j}&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;paramètres à ajouter hors dénivelé déjà prise en compte:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;type de terrain: rocailleux&lt;/li&gt;
  &lt;li&gt;poids du sac à dos: 10Kg&lt;/li&gt;
  &lt;li&gt;condition physique (personne la moins entrainée du groupe (Sol): peu entraîné (pas entraîné)&lt;/li&gt;
  &lt;li&gt;altitude de la marche: [880, 2624]m &lt;script type=&quot;math/tex&quot;&gt;\Rightarrow \approx 1700m&lt;/script&gt; moyenne (2200 plus représentatif?)&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Ne pas négliger la fatigue, vitesse différente après 1h et après 5h de marche.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;5-altitude&quot;&gt;5. altitude&lt;/h2&gt;

&lt;p&gt;Mountain medicine recognizes three altitude regions that reflect the lowered amount of oxygen in the atmosphere.&lt;br /&gt;
&lt;a href=&quot;https://en.wikipedia.org/wiki/Effects_of_high_altitude_on_humans&quot;&gt;wikipedia&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;High altitude = 1,500–3,500 metres (4,900–11,500 ft)&lt;/li&gt;
  &lt;li&gt;Very high altitude = 3,500–5,500 metres (11,500–18,000 ft)&lt;/li&gt;
  &lt;li&gt;Extreme altitude = above 5,500 metres (18,000 ft)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Compliqué de trouver des informations utilisable.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;En randonnée en altitude, vous serez vite confronté à une diminution de la pression en oxygène dans l’air. Elle entraîne alors une difficulté respiratoire, qui s’accroît en cas d’effort physique. Hypoxie, &lt;strong&gt;augmentation du rythme cardiaque&lt;/strong&gt;, Mal Aigu des Montagnes (MAM) en sont les conséquences. La CAT sera alors de prendre le temps de s’acclimater à l’altitude et d’&lt;strong&gt;être en bonne condition physique&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;6-la-haute-route-des-dolomites&quot;&gt;6. La haute route des Dolomites&lt;/h2&gt;

&lt;h3 id=&quot;première-source-fr&quot;&gt;première source (fr)&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://www.visages-trekking.com/printpdf/379&quot;&gt;pdf fr&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Jour 1 - Bressanone - val Campo di Denro - refuge Tre Scarperi Rendez-vous à 14 heures à la gare ferroviaire de Bressanone. Transfert en minibus pour rejoindre le point de départ du circuit situé dans la vallée de Sesten. Une courte remontée du vallon nous amène à l’accueillant refuge Tre Scarperi (1626 m). Au loin se dressent les premiers sommets, prémices d’un voyage au cœur de la verticalité. Temps de marche : 1h00 / M : 200 m.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Jour 2 - Innerfedtal  - Tre Cime - option via ferrata - refuge Locatelli Matinée consacrée à la montée au refuge Locatelli (2405 m) dans un univers minéral, sous les célèbres et imposantes montagnes de calcaire des Tre Cime. Nous consacrons l’après-midi à l’exploration et à la découverte, sac léger, de ce site exceptionnel. Au choix, une magniﬁque randonnée autour des Tre Cime ou du Paterno. Au programme, visite des tunnels creusés par les militaires qui contrôlaient la frontière lors de la Seconde Guerre mondiale, très beaux panoramas sur la face nord des Tre Cime… Temps de marche : 3h00 / M : 850 m - D : 100 m / Après-midi : 3h00 de marche. Dénivelée fonction de la randonnée choisie. NB : L’après-midi, depuis le refuge Locatelli possibilité de faire une via-ferrata accompagné par un guide de haute montagne Italien. A souscrire au moment de votre inscription.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Jour 3 - Val Rinbon - vallées sauvages de Rientztal et de Landro - Pratopiazza (1991 m) En direction de l’ouest, descente par le val Rinbon, à l’aspect très sauvage, pour rejoindre le val Rientztal et le val de Ladro. Au carrefour des vallées, au cœur de splendides forêts de résineux, une remontée sur les versants est permet de rejoindre le col de Strudelkopfsattell (2200 m), pour
découvrir le vallon suspendu de Pratopiazza et son refuge (1991 m). Un authentique site d’alpage des hautes vallées dolomitiques. Temps de marche : 7h00 / M : 800 m - D : 1200 m.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Jour 4 - Refuge de Pratopiazza - Pas de Gaiselleite - refuge de Biella (2327 m) Vous quittez le refuge, traversant une zone agréable d’alpages et de parties boisées. Progressivement, l’ambiance change, le terrain devient plus alpin, vous cheminez sous l’aiguille Croda Rossa (3146 m). Sur la gauche, les imposantes tours de calcaire façonnent un paysage contrasté et puissant. Vous basculez dans un nouveau vallon par le pas de Gaiselleite, passage aérien, mais sans diﬃculté technique (2260 m). Passage à la Casa Cavallo, en direction du dernier col à franchir ce jour, le col de Sora Forno, au pied duquel se trouve le refuge de Biella (2327 m) où vous passez la nuit, au pied de la Croda del Becco (2810 m). Temps de marche : 7h00 / M : 850 m - D : 500 m.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Jour 5 - Lac de Fosses - vallon du lac Piccolo au cœur du parc naturel de Fanes Direction le sud pour rejoindre le lac de Fosses et le très beau vallon du lac Piccolo au coeur du parc naturel de Fanes. Splendides pelouses alpines, colorées par une multitude de ﬂeurs. Descente vers le vallon de Scuro, puis remontée au lac de Fodara et au refuge éponyme. Dans un paysage plus ouvert, montée dans le vallon de Fanes du río San Vigilio, jusqu’au refuge de Fanes (ou refuge de Lavarella), pour passer la nuit. Temps de marche : 7h00 /  M : 750 m - D : 1035 m.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Jour 6 - Refuge Fanes (2060 m) ou Lavarella - La Villa Stern (1500 m) - refuge Ghardenacia En direction de l’est, vous remontez un petit vallon puis un ressaut pour accéder au pied de l’aiguille de Pizza de Lavarella (3055 m), par le col de la Forcella Medesc. Ambiance alpine au rendez-vous, paysage minéral, au pied de grandes parois. Descente facile jusqu’au bourg de la Villa Stern, caractéristique de la région, remarquable par sa beauté (1468 m). Du village, vous rejoignez le refuge de Ghardenacia (2050 m), en remontant les pentes est, riches en mélèzes. Repas et nuit au refuge. Temps de marche : 7h00 / M et D : 1100 m.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Jour 7 - Gardenaccia - Vallon de Langental/lieu-dit Saint-Silvestre - Bressanone Ultime étape de ce périple dans les Dolomites sauvages. Vous partez plein ouest en direction de paso de Ghardenacia (2543 m). Belle traversée jusqu’au refuge Puez. Descente par le vallon de Langental jusqu’au parking de Saint-Silvestre, ﬁn de la randonnée. Transfert jusqu’à Bressanone en milieu de journée. Temps de marche : 5h30 / M : 500 m - D : 985 m.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Les horaires sont donnés à titre indicatif et calculés pour des &lt;span style=&quot;color:red&quot;&gt;&lt;strong&gt;marcheurs d’un niveau moyen hors pauses et temps pris pour le pique-nique&lt;/strong&gt;&lt;/span&gt;. &lt;br /&gt;
M : montée &lt;br /&gt;
D : descente.&lt;/p&gt;

&lt;p&gt;Étapes de &lt;span style=&quot;color:red&quot;&gt;&lt;strong&gt;6h00 en moyenne&lt;/strong&gt;&lt;/span&gt; Étapes pouvant présenter des dénivelées positives de 700 à 1000 m environ et/ou avec des distances de &lt;span style=&quot;color:red&quot;&gt;&lt;strong&gt;15 à 18 km&lt;/strong&gt;&lt;/span&gt;(note perso: hors KmE). Vous portez vos aﬀaires de la journée. Possibilité de passage en altitude. &lt;span style=&quot;color:red&quot;&gt;&lt;strong&gt;Vous êtes sportif endurant et marchez très régulièrement sur sentiers ou hors sentiers.&lt;/strong&gt;&lt;/span&gt; Possibilité de passage en altitude.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;C’est le pdf d’une rando organisée. les consignes mise en rouge sont données sachant que l’organisation déplace leur gros sac et eux se contentent de transporter sur leur dos leur reserve d’eau pour la journée:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Vos bagages sont transportés par véhicule, vous les retrouvez le soir à chaque hébergement, sauf aux étapes des J2, J4, et J6, où vous devrez ajouter dans votre sac à dos un drap-sac et une trousse de toilette pour passer la nuit. Vos bagages sont transportés les autres soirs à l’hébergement par véhicule.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;autre-source-en&quot;&gt;Autre source (en)&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://www.dolomitemountains.com/en/summer_fall_trips/haute_routes617.htm&quot;&gt;dolomitemountains.com&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;http://www.dolomitemountains.com/res/pdf/final.pdf&quot;&gt;pdf en&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Alta Via 4 is a fantastic high altitude trail, traversing the Italian Alps from north to south. Alta Via (Italian), Haute Route (French), Höhenweg (German), or &lt;strong&gt;High Route is the name given to multi-day, hut-to-hut alpine tours&lt;/strong&gt;. And in the &lt;strong&gt;Dolomite Mountains&lt;/strong&gt;, &lt;strong&gt;the Alta Via&lt;/strong&gt; are some of the most breathtaking, &lt;span style=&quot;color:red&quot;&gt;&lt;strong&gt;challenging&lt;/strong&gt;&lt;/span&gt;, multi-day trails available in this mountainous wonderland!&lt;/p&gt;

&lt;p&gt;On this combined hiking and via ferrata climbing trip, you’ll travel across the Tre Scarpèri, Croda dei Barànci, Cima Grande di Lavaredo, Cristallo, Sorapìss, and Antelao mountains. You’ll traverse this section of the Dolomites from top to bottom, north to south, maintaining medium-high altitude and exploring spectacular angles of these different mountainous groups of the range. And, you can expect to see vistas of up to 80 percent of all the Dolomites!&lt;/p&gt;

&lt;p&gt;Truly a hiker’s paradise, thousands of trails wind their way between the fantastic pinnacles of the jagged Dolomites, which magically turn from pale gray to gold and pink at dusk. And via ferrata, &lt;strong&gt;literally translated as the iron way or iron path, run throughout the Dolomites, incorporate a system of iron ladders to assist hikers on steep mountainous terrain&lt;/strong&gt;. These trails, originally built and used by soldiers during WWI, are an exhilarating way to access spectacular mountain terrain! And the combination of hiking, via ferrata, and cozy mountain huts, are only surpassed by your discovery of incredible vistas that lie around every corner!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Highlights&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Hike and climb through the Dolomites on the famous** Alta Via 4** high route&lt;/li&gt;
  &lt;li&gt;Feel the adrenaline rush of climbing via ferrata&lt;/li&gt;
  &lt;li&gt;Tackle &lt;strong&gt;some of the most challenging&lt;/strong&gt; and rewarding &lt;strong&gt;hiking terrain on earth&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Enjoy the cozy atmosphere of a different mountain rifugio each night – &lt;strong&gt;the real mountaineer experience&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;day-by-day&quot;&gt;Day by day&lt;/h4&gt;

&lt;p&gt;6 days of exhilarating hiking and via ferrata climbing on the Alta Via 4 high route through some of the most scenic mountains of the Dolomites.&lt;/p&gt;

&lt;p&gt;Day 1 ~ Arrive in San Candido / Innichen, Dolomites
Arrive in San Candido/Innichen (1,175m / 3,855’) on your own and check into your 3-star hotel (private transfer available on request). San Candido is a charming market town, with a marketplace that dates back to the 4th century. It is one of five villages in the Val Pusteria, in the eastern valley of South Tyrol (Südtirol / Alto Adige). Together with its hamlets Versciaco, Prato Drava, and Monte San Candido, San Candido is located in the Sesto Dolomites Natural Park at the foot of the Monte Baranci.
D… Hotel in San Candido (3-Star)&lt;/p&gt;

&lt;p&gt;Day 2 ~ Tre Cime di Lavaredo
In the morning, meet your UIAGM/IFMGA Professional Mountain Guide for a trip briefing and orientation. From your hotel in San Candido, hike to the Rifugio Tre Scarperi / Dreischuster Hütte (1,617m / 5,305’), situated in the quiet Campo di Dentro Valley. From here you’ll have a beautiful view overlooking the Val Pusteria from where you just hiked! Continue hiking up to Monte Mattina, in the valley of the Rio di San Candido (the San Candido River), and continue toward Alpe delle Fosse and Passo dell’Alpe Mattina (2,446m / 8,025’). Arrive at your rifugio for the night (2,405m / 7,890’). From the rifugio you will have an incredible view of the Tre Cime di Lavardeo, literally “the three peaks of Lavaredo” (also called the Drei Zinnen in German, meaninhg “three merlons”). You’ll also have incredible vistas of other peaks in every direction – Tre Scarperi, Monte Paterno, Croda dei Toni, Marmarole, Cadini di Misurina, Antelao, Monte Cristallo, Monte Piana, and Croda Rossa d’Ampezzo. (~5-6 hours hiking 15.7km / 9.7 miles, 1,303m / 4,275’ ascent, 58m / 190’ descent. Option to add a via ferrata.) 
B,D… Rifugio&lt;/p&gt;

&lt;p&gt;Day 3 ~ Cadini Mountains
The first part of your hike today follows an old wartime mule track, which circles around to the west of the magnificent Tre Cime via the Col di Mezzo (2,324m / 7,625’), and on to Rifugio Auronzo on the southern slope. From here, your final approach to Rifugio Fonda Savio (2,367m / 7,766’) takes you through cables, ladders, rungs, and ledges, and continues in a similar vein to Forcella del Diavolo (2,598m / 8,524’) and across the “Ciadin de la Neve” snowfield.  This final stretch from Rifugio Fonda Savio to Rifugio Città di Carpi (2,130m / 6,988’) is extremely interesting: maintaining altitude, the Alta Via 4 follows the Sentiero Bonacossa, an equipped WWI route along the central ridge of the Cadini, which leads you on a path through elegant rock needles. While not an actual via ferrata that you clip in to, a path offers a cable, referred to as a “sentiero di attrezzato,” for you to use as a handrail for your protection. After this full day, arrive at a cozy mountain rifugio (2,110m / 6,922’), your home for tonight.
(~6 hours hiking 8km / 4,9 miles, 1,000m /3,281’ ascent, 1,200m / 3,937’ descent.)
B,D… Rifugio&lt;/p&gt;

&lt;p&gt;Day 4 ~ Misurina
From last night’s rifugio, hike past Forcella Maràia (2,101m /6,893’). Enjoy the landscape of Col de Varda and Misurina as you hike, arriving at the town of Misurina in about two hours. Be sure to admire the beautiful Lago di Misruna (Lake Misurna) reflecting the majestic peaks!  Hike along the road to “Bivio Dogana Vecchia,” where you can visit the old customs building. Reach your rifugio for the night (1,928m / 6,325’). A few minutes from the rifugio, just a short hike up a hill, there is also a wonderful turquoise lake to explore.
(~5-6 hours hiking 14,2km / 8,8 miles, 849m / 2,785’ ascent, 1,020m / 3,346’ descent.)
B,D…. Rifugio&lt;/p&gt;

&lt;p&gt;Day 5 ~ Vandelli and Minanzio Peaks
Curving high over Val d’Ansei, the full-blooded Via Ferrata Vandelli (a moderate to diffucult via ferrata) is fitted with ladders, rungs, and cables for an exciting climb to 2,370 meters (7,775’), up over Col del Fuoco via chimneys, ledges, and sheer rock faces.  Shrubby vegetation and grass reappear after your climb in Busa del Banco, then it’s a drop via steep flanks to Bivacco Comici (2,050m / 6,726’). This stage, through the Vandelli and Minazio Parks, allows you to cross from the Sorapiss Valley to the San Vito Valley.&lt;/p&gt;

&lt;p&gt;Sentiero Minanzio follows, which means more aided exposed passages, and challenges en route as you head toward the magnificent Forcella Grande (2,255m / 7,398’) under the amazing Torre Sabbioni, and down to your rifugio for the night (1,823m / 5,981’).
(~7-8 hours hiking 9,3km / 5,7 miles, 1,200m / 3,937’ ascent, 1,300m / 4,265’ descent.)
B,D… Rifugio&lt;/p&gt;

&lt;p&gt;Day 6 ~ Antelao Massif
From this point on, the Alta Via n.4 joins the Alta Via n.5. Over eroding terrain, a clear path cuts across to Forcella Piccola (2,120m / 6,955’) to the converted barracks of Rifugio Galassi. In the shadow of the giant pyramidal Antelao (3,264m / 10,709’), the second highest peak in the Dolomites, Alta Via 4/5 proceeds over tiring moraine, and up a rock face to Forcella del Ghiacciaio (2,584m / 8,478’). Through a steep, tricky chimney you will descend to grass and a light woods in Val Antelao. Once you climb Forcella Piria (2,096m / 6,977’), it is easy going past the Croda di San Pietro, and finally on to a comfortable rifugio (1,796m / 5,892’) where you will spend tonight.
(~8-9 hours hiking 12km / 7,4 miles, 1,350m / 4,429’ ascent, 1,370m / 4,495’ descent.)
B,D… Rifugio&lt;/p&gt;

&lt;p&gt;Day 7 ~ Forcella Antracisa
Today a jeep track leads you over Forcella Antracisa (1,693m / 5,554’), and follow the gently descending path to Pozzale. En route, you can enjoy the wonderful view of the Centro Cadore to the south. From Pozzale, cover the remaining 1,5 kilometers (0,9 miles) to Pieve di Cadore (880m / 2,887’), either by walking along the road or by Dolomiti Bus (fare not included). Have a private transfer to Cortina d’Ampezzo and check into your 3-star hotel. You will find your luggage at the hotel.
(~3-4 hours hiking 6,3km / 3,9 miles, 80m / 262’ ascent, 990m / 3,248’ descent.)
B,D… Hotel in Cortina d’Ampezzo (3-Star)&lt;/p&gt;

&lt;p&gt;Day 8 ~ Depart
Enjoy one last hearty mountain breakfast and prepare for departure, leaving with incredible memories to last a lifetime.
B…&lt;/p&gt;

&lt;!--## 7. Mon avis (Sol)

Je pensais à un trip tranquil avec de la rando et des viaFerata. Je suis totalement inexpérimenté et à tendance sédentaire, tellement qu'initialement les 15km par jour ne m'ont absolument pas fait tilter. En me renseignant un peu, je réalise à quel point je ne suis peu expérimenté pour penser que 15km c'est easy.

J'ai passé une année complète à muscler mon poignet, mes doitgs, mes yeux et mon cerveau. Ma condition physique n'a probablement jamais été aussi faible et je n'ai jamais été aussi agé. Je suis jeune, mais j'ai plus 20 ans non plus. 

Je pensais qu'on allait avoir une **petite** aventure mais que principalement cette expérience allait être ressourçante **ET** reposante. J'ai besoin de me reposer et je ne me sens pas prêt à tackler cette aventure au vue des informations que j'ai trouvé.

J'ai passé une année à me lever fatigué tous les matins. Je ne veux pas passer 6 jours à me lever en ayant mal au jambes et devoir repartir pour une journée complète. **C'est de vacances dont j'ai besoin pas d'un challenge supplémentaire**.

C'est les seul 2 semaines que je peux passer avec Stephanie de toute l'année. Elle a été formidable avec moi cette année et depuis un bon moment on s'est reservé ces deux semaines pour un truc **cool**. Je suis dsl mais malgré que ça semble splendide, je ne pense pas que ça va être un truc cool.

Cette aventure va me couter de l'argent que je n'ai pas et me faire dépenser tout l'argent que je n'ai pas dépensé cette année pour des objets que je risque de ne pas d'utiliser avant un moment.

il faut qu'on se skype pour discuter de tout ça mais je t'invite à lire toutes les informations que j'ai centralisé ici avant. Je ne veux pas que tu tente de me convaincre. Pour toutes les raisons énnoncé ici, je ne suis pas tenté par cette aventure et je te propose de soit faire une version beacoup plus light, soit changer totalement de plan, soit... tanpis, et on se verra à Nivelles.

Désolé d'avoir accepté trop vite, j'étais super occupé (je le suis toujours mais cette histoire de chaussures et de rocaille m'a mis la puce à l'oreille), et je me suis prononcé trop rapidement. --&gt;

&lt;h4 id=&quot;autres-sources&quot;&gt;autres sources:&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://fr.wikipedia.org/wiki/Km/effort&quot;&gt;wikipedia&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;http://www.montagneticinesi.ch/chilometro_sforzo/?lang=fr&quot;&gt;montagneticinesi&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://www.freemaptools.com/radius-around-point.htm&quot;&gt;radius tool&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://www.randonner-malin.com/estimer-votre-vitesse-moyenne-de-marche-en-randonnee/&quot;&gt;Randonner Malin&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Fri, 02 Jun 2017 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/divers/divers-Randonnee-Copy.html</link>
        <guid isPermaLink="true">http://localhost:4000/divers/divers-Randonnee-Copy.html</guid>
        
        <category>Divers</category>
        
        <category>randonnée</category>
        
        
        <category>Divers</category>
        
      </item>
    
      <item>
        <title>Algo: Recursivité (fr)</title>
        <description>&lt;h1 id=&quot;récursivité&quot;&gt;Récursivité&lt;/h1&gt;

&lt;h2 id=&quot;sources&quot;&gt;Sources&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://visualgo.net/en/recursion&quot;&gt;visualgo.net&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://www.u-picardie.fr/~furst/docs/3-Recursivite.pdf&quot;&gt;u-picardie&lt;/a&gt;  &lt;em&gt;aller fouiller un peu, ça semble bien !&lt;/em&gt;&lt;br /&gt;
&lt;a href=&quot;https://fr.wikipedia.org&quot;&gt;wikipedia.org&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://stackoverflow.com&quot;&gt;stackoverflow&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;codes&quot;&gt;Codes&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/RoscaS/algo_sort&quot;&gt;Repo&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;résumé&quot;&gt;Résumé&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;/algo/resume-cp2.html&quot;&gt;Résumé cp3&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;definition&quot;&gt;Definition&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Un objet est dit récursif si il se définit à partir de lui-même, &lt;em&gt;si il apparait dans sa définition&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;Une construction est &lt;strong&gt;récursive&lt;/strong&gt; si elle se définit à partir d’elle-même.&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;img src=&quot;/00illustrations/algo-recur/sier.png&quot; height=&quot;auto&quot; /&gt;&lt;/p&gt;

  &lt;p&gt;&lt;em&gt;triangle de Sierpinski&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Quelques acronymes récursifs courants:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PHP, GNU, LAME, WINE, YAML
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;en-informatique&quot;&gt;En informatique&lt;/h2&gt;

&lt;p&gt;En informatique, un programme est dit &lt;strong&gt;récursif&lt;/strong&gt; s’il s’appelle lui même. Il s’agit donc &lt;strong&gt;forcément d’une fonction&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Exemple:&lt;/em&gt; &lt;script type=&quot;math/tex&quot;&gt;\large factorielle&lt;/script&gt; &lt;script type=&quot;math/tex&quot;&gt;\large n! = 1 \cdot 2 \cdot \ldots \cdot n \Rightarrow n! = n \cdot (n-1)!&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/00illustrations/algo-recur/facto1-def.png&quot; height=&quot;250&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;L’appel récursif est traité comme n’importe quel appel de fonction.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/00illustrations/algo-recur/facto1.png&quot; height=&quot;700&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;condition-darrêt&quot;&gt;Condition d’arrêt&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Pusqu’une fonction récursive s’appelle elle-même, il est impératif qu’on prévoit une &lt;span style=&quot;color:red&quot;&gt; condition d’arrêt &lt;/span&gt; à la récursion, sinon le programme ne s’arrête jamais !&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;On doit toujours tester en premier la condition d’arrêt&lt;/strong&gt;, et ensuite, si la condition n’est pas vérifiée, lancer un appel récursif.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Exemple de la factorielle:&lt;/em&gt; &lt;span style=&quot;color:red&quot;&gt; &lt;script type=&quot;math/tex&quot;&gt;\large si&lt;/script&gt; &lt;/span&gt; &lt;script type=&quot;math/tex&quot;&gt;\large n \neq 1, \quad n \cdot (n-1)!&lt;/script&gt; &lt;span style=&quot;color:red&quot;&gt; &lt;script type=&quot;math/tex&quot;&gt;\large sinon&lt;/script&gt;&lt;/span&gt;&lt;script type=&quot;math/tex&quot;&gt;\large, \quad n! =1&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/00illustrations/algo-recur/facto2-def.png&quot; height=&quot;250&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;main()&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/00illustrations/algo-recur/facto2.png&quot; height=&quot;600&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;a href=&quot;https://visualgo.net/en/recursion&quot;&gt;animation&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;pile-dexecution-stack&quot;&gt;Pile d’execution (stack)&lt;/h2&gt;

&lt;p&gt;La récursivité fonctionne car chaque appel de fonction est différent.
L’appel d’une fonction se fait dans un  &lt;span style=&quot;color:red&quot;&gt; contexte d’execution &lt;/span&gt; propre, qui contient:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;l’adresse mémoire de l’instruction qui a appelé la fonction&lt;/li&gt;
  &lt;li&gt;les valeurs des paramètres et des variables définies par la fonction&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://goo.gl/QGxNHe&quot;&gt;version interactive&lt;/a&gt;
&lt;img src=&quot;/00illustrations/algo-recur/facto-py.gif&quot; height=&quot;auto&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Prévoir à l’avance le nombre d’appels d’une fonction récursive pouvant être en cours simultanément en mémoire est &lt;strong&gt;impossible&lt;/strong&gt;. La récursivité suppose donc une &lt;span style=&quot;color:red&quot;&gt; allocation dynamique &lt;/span&gt; de la mémoire (à l’execution).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Attention:&lt;/strong&gt; éxecuter trop d’appels de fonction fera déborder le stack !&lt;/p&gt;

&lt;h2 id=&quot;récursif-vs-itératif&quot;&gt;Récursif VS itératif&lt;/h2&gt;

&lt;p&gt;Il est souvent possible d’écrire un même algorithme en itératif et en récursif.&lt;/p&gt;

&lt;p&gt;L’exécution d’une version récursive d’un algorithme est généralement un peu moins rapide que celle de la version itérative, même si le nombre d’instructions est le même (à cause de la gestion des appels de fonction).&lt;/p&gt;

&lt;!--![/00illustrations/algo-recur/recVSit.png](/00illustrations/algo-recur/recVSit.png)--&gt;

&lt;div class=&quot;image&quot; style=&quot;width: 100%&quot;&gt;
    &lt;a href=&quot;/00illustrations/algo-recur/recVSit.png&quot;&gt;&lt;img src=&quot;/00illustrations/algo-recur/recVSit.png&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Un algorithme récursif peut conduire à exécuter bien plus d’instructions que la version itérative.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Exemple:&lt;/em&gt; la suite de Fibonacci&lt;/p&gt;

&lt;h3 id=&quot;suite-de-fibbonacci-large-n--45&quot;&gt;Suite de Fibbonacci (&lt;script type=&quot;math/tex&quot;&gt;\large n = 45&lt;/script&gt;)&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Par définition, les deux premiers nombres de la suite de Fibonacci sont 1 et 1 &lt;a href=&quot;https://fr.wikipedia.org/wiki/Suite_de_Fibonacci&quot;&gt;ou&lt;/a&gt; 0 et 1. Nous devons en tenir compte pour l’implémentation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;récursif&quot;&gt;récursif:&lt;/h4&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fib1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fib1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fib1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// output:
// 1134903170
// 10.859 seconds
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Temps d’execution: &lt;script type=&quot;math/tex&quot;&gt;\large \color{red}{10.859} \; secondes&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;version plus compacte:&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fib2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;     
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fib2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fib2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// output:
// 1134903170
// 10.738 seconds
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Temps d’execution: &lt;script type=&quot;math/tex&quot;&gt;\large \color{red}{10.738} \; secondes&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;version très compacte:&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fib3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fib3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fib3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// output:
// 1134903170
// 9.752 seconds
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Temps d’execution: &lt;script type=&quot;math/tex&quot;&gt;\large \color{red}{9.752} \; secondes&lt;/script&gt;&lt;/p&gt;

&lt;h4 id=&quot;itératif&quot;&gt;itératif:&lt;/h4&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fib_it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;           
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// output:
// 1134903170
// 0.389 seconds
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Temps d’execution: &lt;script type=&quot;math/tex&quot;&gt;\large \color{green}{0.389} \; secondes&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Les différences de temps d’éxecution parlent pour elles mêmes et cette animation nous aide à en comprendre la raison:&lt;/p&gt;

&lt;div class=&quot;image&quot; style=&quot;width: 100%&quot;&gt;
    &lt;a href=&quot;https://visualgo.net/en/recursion&quot;&gt;&lt;img src=&quot;/00illustrations/algo-recur/fibo8.gif&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;h2 id=&quot;récursivité-terminale-et-non-terminale&quot;&gt;Récursivité terminale et non terminale&lt;/h2&gt;

&lt;p&gt;En programmation, on distingue, pour des raisons d’efficacité, 2 types d’algorithmes récursifs.&lt;/p&gt;

&lt;h3 id=&quot;1-récursivité-terminale&quot;&gt;1. récursivité Terminale&lt;/h3&gt;

&lt;p&gt;Un algorithme est terminal si aucune opération ne sui l’appel récursif.
C’est l’appel récursif qui “termine” l’algorithme.
Toutes les opération sont faites avant l’appel récursif: La phase de remontée devient alors inutile (elle ne fait aucun traitement, hormis le réajustement de la pile).
La récursivité terminale revient à appliquer l’adage &lt;em&gt;Diviser pour régner&lt;/em&gt; de la façon suivante:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;On traite la données courante&lt;/li&gt;
  &lt;li&gt;Le même traitement est appliqué au reste des données&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2-récursivité-non--terminale&quot;&gt;2. Récursivité non- terminale&lt;/h3&gt;

&lt;p&gt;Un algorithme récursif est &lt;strong&gt;non-terminal&lt;/strong&gt; lorsque des opérations suivent l’appel récursif. C’est notament le cas lorsque l’appel récursif est utilisé dans une expression pour calculer un résultat. Toutes les opérations ne sont pas faites avant l’appel récursif: la phase de remontée fait une partie du traitement, elle contient souvent la majorité des opérations. La récursivité no-terminale revient à appliquer l’adage &lt;em&gt;diviser pour régner&lt;/em&gt; de la façon suivante:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;On réduit le problème à son cas trivial&lt;/li&gt;
  &lt;li&gt;On traite le cas et on élargit l’ensemble des données traitées.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;points-cruciaux-pour-la-programmation-récursive&quot;&gt;Points cruciaux pour la programmation récursive&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Avoir une condition terminale&lt;/li&gt;
  &lt;li&gt;Avoir un appel récursif dont un des paramètres converge vers la condition terminale&lt;/li&gt;
  &lt;li&gt;S’assurer que la condition est &lt;strong&gt;TOUJOURS&lt;/strong&gt; atteinte après un nombre fini d’appels&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;quand-éviter-dutiliser-un-algorithme-récursif-&quot;&gt;Quand éviter d’utiliser un algorithme récursif ?&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Lorsque la récurence est d’ordre plus grande que 1 (c’est à dire que l valeur au rang &lt;script type=&quot;math/tex&quot;&gt;\large n&lt;/script&gt; ne dépend pas seulement du rang &lt;script type=&quot;math/tex&quot;&gt;\large n-1&lt;/script&gt;, mais aussi de &lt;script type=&quot;math/tex&quot;&gt;\large n-2&lt;/script&gt;, voir &lt;script type=&quot;math/tex&quot;&gt;\large n-3&lt;/script&gt;,… )&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Une utilisation “aveugle” de la récursivité impliquera une redondance de calculs. Dans ce cas, il peut être utile de dérouler l’algorithme avant de l’implémenter pour s’assurer qu’il ne génère pas d’opeerations inutiles.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;récursivité-et-itérations&quot;&gt;Récursivité et itérations&lt;/h2&gt;

&lt;p&gt;Tout algorithme récursif a un équivalent itératif. La réciproque est également vraie en théorie, mais le passage de l’un à l’autre n’est pas toujours aisé. La procédure de &lt;strong&gt;derécursivation&lt;/strong&gt; consiste à gérer dans le programme le comportement de la pile lors des appels récursifs.&lt;/p&gt;

&lt;p&gt;En règle générale, un algorithme récursif est moins performant qu’un algorithme itératif : Chaque appel récursif nécessite d’empiler le contexte de la fonction (cadre de pile), puis la condition terminale atteinte, dépiler ce contexte avant d’exécuter les instructions qui suivent l’appel récursif.  La création, le changement et la libération de contextes sont donc des opérations supplémentaires non réalisées par l’équivalent itératif. &lt;strong&gt;Les algorithmes récursifs sont donc moins performants que leurs équivalents itératifs&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Exception à cette règle, la récursivité terminale est détectée par la majorité des compilateurs et comme il n’y pas d’instruction à exécuter après l’appel récursif terminal, la phase de remontée pourra être supprimée. &lt;strong&gt;Dans la plupart des cas, une fonction récursive terminale aura donc la même performance que son équivalente itérative&lt;/strong&gt;. La récursivité sera alors privilégiée, pour sa lisibilité et son élégance.&lt;/p&gt;

&lt;h2 id=&quot;précisions-sur-les-deux-types-de-récursivité-terminalnon-terminal&quot;&gt;Précisions sur les deux types de récursivité (terminal/non terminal)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Une fonction récursive est dite &lt;span style=&quot;color:red&quot;&gt;terminale&lt;/span&gt; si aucun traitement n’est effectué à la remontée d’ un appel récursif (sauf le retour d’une valeur).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Une fonction récursive est dite &lt;span style=&quot;color:green&quot;&gt;non terminale&lt;/span&gt; si le résultat de l’appel récursif est utilisé pour réaliser un traitement (en plus du retour d’une valeur).&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Exemple de non terminalité : forme récursive non terminale  de la factorielle, les calculs se font à la remontée. C’est l’exemple au détbut de cette page !&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;fonction&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;avec&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;retour&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entier&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;factorielleNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entier&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;debut&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;si&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alors&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;retourne&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sinon&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;retourne&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;factorielleNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;finsi&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fin&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;exemple-de-terminalité-&quot;&gt;Exemple de terminalité :&lt;/h3&gt;

&lt;p&gt;On peut facilement rendre notre fonction factorielle terminale:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// la fonction doit être appelée en mettant resultat à 1
&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;fonction&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;avec&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;retour&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entier&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;factorielleT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entier&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entier&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resultat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;debut&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;si&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alors&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;retourne&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resultat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sinon&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;retourne&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;factorielleT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resultat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;finsi&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fin&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;intérêt-de-la-récursivité-terminale&quot;&gt;Intérêt de la récursivité terminale&lt;/h3&gt;

&lt;p&gt;Une fonction récursive &lt;span style=&quot;color:red&quot;&gt;terminale&lt;/span&gt; est en théorie plus efficace (mais souvent moins facile à écrire) que son équivalent non terminale: il n’y a qu’une phase de descente et pas de phase de remontée.&lt;/p&gt;

&lt;p&gt;En récursivité &lt;span style=&quot;color:green&quot;&gt;terminale&lt;/span&gt; , les appels récursifs n’ont pas besoin d’êtres empilés dans la pile d’exécution car l’appel suivant remplace simplement l’appel précédent dans le contexte d’exécution.&lt;/p&gt;

&lt;p&gt;Certains langages utilisent cette propriété pour exécuter les récursions terminales aussi efficacement que les itérations.&lt;/p&gt;

&lt;p&gt;Il est possible de transformer de façon simple une fonction récursive terminale en une fonction itérative : c’est la &lt;span style=&quot;color:green&quot;&gt;dérécursivation&lt;/span&gt;.&lt;/p&gt;

&lt;h4 id=&quot;une-fonction-récursive-terminale-a-pour-forme-générale&quot;&gt;Une fonction récursive terminale a pour forme générale:&lt;/h4&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;fonction&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;avec&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;retour&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recursive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;debut&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;I0&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;si&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alors&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;I1&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sinon&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;I2&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;recursive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;finsi&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fin&lt;/span&gt;    
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;T&lt;/strong&gt; est le type de retour&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;P&lt;/strong&gt; est la liste des paramètres&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;C&lt;/strong&gt; est la condition d’arrêt&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;I0&lt;/strong&gt; le bloc d’instructions exécuté dans tous les cas&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;I1&lt;/strong&gt; le bloc d’instructions exécuté si &lt;strong&gt;C&lt;/strong&gt; est vraie&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;I2&lt;/strong&gt; est le bloc d’instructions exécuté si &lt;strong&gt;C&lt;/strong&gt; est fausse&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;f&lt;/strong&gt; la fonction de transformation des paramètres&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;fonction-itérative-correspondante&quot;&gt;Fonction itérative correspondante:&lt;/h4&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;fonction&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;avec&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;retour&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iterative&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;debut&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;IO&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tantque&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;non&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;faire&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;I2&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;P&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;I0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;fintantque&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;I1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;dérécursivation-de-la-factorielle-terminale&quot;&gt;Dérécursivation de la factorielle terminale:&lt;/h3&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// cette fonction doit être appelée avec a=1
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fonction&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;avec&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;retour&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entier&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;factorielleRecurTerm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entier&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entier&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;debut&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;si&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alors&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;retourne&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sinon&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;retourne&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;factorielle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;finsi&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fin&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;fonction&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;avec&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;retour&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entier&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;factorielleIter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entier&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entier&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;debut&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tantque&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;faire&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;–&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;–&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;fintantque&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;retourne&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fin&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;forme-générale-dune-fonction-récursive-non-terminale&quot;&gt;Forme générale d’une fonction récursive non terminale:&lt;/h4&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;fonction&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;avec&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;retour&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recursive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;debut&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;I0&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;si&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alors&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;I1&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;sinon&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;I2&lt;/span&gt; 
            &lt;span class=&quot;n&quot;&gt;recursive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;I3&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;finsi&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fin&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;T&lt;/strong&gt; est le type de retour
&lt;strong&gt;P&lt;/strong&gt; est la liste des paramètres
&lt;strong&gt;C&lt;/strong&gt; est la condition d’arrêt
&lt;strong&gt;I0&lt;/strong&gt; le bloc d’instructions exécuté dans tous les cas
&lt;strong&gt;I1&lt;/strong&gt; le bloc d’instructions exécuté si &lt;strong&gt;C&lt;/strong&gt; est vraie 
&lt;strong&gt;I2&lt;/strong&gt; et I3 les blocs d’instructions exécutés si &lt;strong&gt;C&lt;/strong&gt; est fausse
&lt;strong&gt;f&lt;/strong&gt; la fonction de tranformation des paramètres&lt;/p&gt;

&lt;p&gt;La fonction  itérative correspondante  doit  gérer  la  sauvegarde  des  contextes d’exécution (valeurs des paramètres de la fonction).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;La  fonction  itérative  correspondante  est  donc  moins  efficace  qu’une  fonction écrite directement en itératif.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;exemples-dalgorithmes-récursifs&quot;&gt;Exemples d’algorithmes récursifs&lt;/h2&gt;

&lt;h4 id=&quot;factorielle&quot;&gt;Factorielle&lt;/h4&gt;
&lt;p&gt;Retourne la factorielle d’un nombre (&lt;script type=&quot;math/tex&quot;&gt;\large !n&lt;/script&gt;)&lt;/p&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;facto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;facto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Récursion non-terminale&lt;/p&gt;

&lt;h4 id=&quot;descending&quot;&gt;Descending&lt;/h4&gt;
&lt;p&gt;Print les nombres à partir de &lt;script type=&quot;math/tex&quot;&gt;\large n&lt;/script&gt; jusque &lt;script type=&quot;math/tex&quot;&gt;0&lt;/script&gt;&lt;/p&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;descending&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;descending&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Récursion terminale&lt;/p&gt;

&lt;h4 id=&quot;ascending&quot;&gt;Ascending&lt;/h4&gt;
&lt;p&gt;Même chose que le précédent mais de &lt;script type=&quot;math/tex&quot;&gt;0&lt;/script&gt; à &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt;&lt;/p&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ascending&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ascending&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Récursion terminale. &lt;em&gt;Comparer avec le précédent&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&quot;somme&quot;&gt;Somme&lt;/h4&gt;
&lt;p&gt;Retourne la somme des nombres de &lt;script type=&quot;math/tex&quot;&gt;1&lt;/script&gt; à &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt;&lt;/p&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;somme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;somme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Récursion non-terminale&lt;/p&gt;

&lt;h4 id=&quot;sommetab&quot;&gt;SommeTab&lt;/h4&gt;
&lt;p&gt;Retourne la somme des nombres dans un tableau&lt;/p&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sommeTab&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;len&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sommeTab&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Récursion non-terminale&lt;/p&gt;

&lt;h4 id=&quot;multiple-de-13&quot;&gt;multiple de 13&lt;/h4&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;multiple13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;multiple13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Récursion terminale&lt;/p&gt;

&lt;h4 id=&quot;elever-à-la-puissance-nt&quot;&gt;Elever à la puissance (NT)&lt;/h4&gt;
&lt;p&gt;Élève &lt;script type=&quot;math/tex&quot;&gt;a&lt;/script&gt; à la puissance &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt;ss&lt;/p&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;puissance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;puissanceNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Récursion non-terminale&lt;/p&gt;

&lt;h4 id=&quot;elever-à-la-puissance-t&quot;&gt;Elever à la puissance (T)&lt;/h4&gt;
&lt;p&gt;Élève &lt;script type=&quot;math/tex&quot;&gt;a&lt;/script&gt; à la puissance &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt;ss&lt;/p&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;puissanceT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;n&quot;&gt;puissanceT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Récursion terminale&lt;/p&gt;

&lt;h4 id=&quot;palindrome&quot;&gt;Palindrome&lt;/h4&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;palindrome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;palindrome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Récursion terminale&lt;/p&gt;

&lt;h4 id=&quot;cherche-valeur&quot;&gt;Cherche valeur&lt;/h4&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;searchVal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;searchVal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Récursion terminale&lt;/p&gt;

&lt;h4 id=&quot;fibbonacci-cest-mal-&quot;&gt;Fibbonacci (c’est mal !)&lt;/h4&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fib&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fib&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fib&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;algorithmes-de-tri-en-mode-récursif&quot;&gt;Algorithmes de tri en mode récursif&lt;/h2&gt;

&lt;h4 id=&quot;tri-bulle&quot;&gt;Tri-bulle&lt;/h4&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;echange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;triBulle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;echange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;triBulle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Récursion terminale&lt;/p&gt;

&lt;h4 id=&quot;tri-extract&quot;&gt;Tri-extract&lt;/h4&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;echanger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;placerMinGauche&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idxMin&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idxMin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;idxMin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;echanger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idxMin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;triExtract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;placerMinGauche&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;triExtract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Récursion terminale&lt;/p&gt;

&lt;h4 id=&quot;tri-insert&quot;&gt;Tri-insert&lt;/h4&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;insertion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;triInsert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;triInsert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;insertion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Récursion terminale&lt;/p&gt;

&lt;h2 id=&quot;résumé-1&quot;&gt;Résumé&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;/algo/resume-cp2.html&quot;&gt;Résumé cp3&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Fri, 02 Jun 2017 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/algo/Algo-recursivite.html</link>
        <guid isPermaLink="true">http://localhost:4000/algo/Algo-recursivite.html</guid>
        
        <category>algo</category>
        
        <category>recursivite</category>
        
        <category>fr</category>
        
        
        <category>Algo</category>
        
      </item>
    
  </channel>
</rss>
